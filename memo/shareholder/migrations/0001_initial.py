# Generated by Django 3.0.11 on 2021-05-03 14:11

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('status', models.CharField(choices=[('proposed', 'Task is proposed'), ('active', 'Task is active'), ('pending', 'Task is pending'), ('review', 'Task is under review'), ('completed', 'Task is completed'), ('failed', 'Task is failed')], default='proposed', help_text='Status of the task', max_length=20, verbose_name='Status')),
                ('workload', models.DecimalField(decimal_places=2, default=1.0, max_digits=4, verbose_name='Workload in hour shares')),
                ('start_date', models.DateTimeField(blank=True, verbose_name="Task's Start Date")),
                ('closing_date', models.DateTimeField(blank=True, verbose_name="Task's Deadline")),
                ('description', models.TextField(help_text="Task's description and goals", max_length=5000, verbose_name='Description')),
                ('feature_branch', models.CharField(max_length=255, verbose_name='GIT feature branch name')),
                ('jira_url', models.URLField(blank=True, verbose_name='URL to JIRA Task')),
                ('creator', models.ForeignKey(help_text='Creator of the task', on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
                'ordering': ('-start_date', 'workload'),
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('rating', models.CharField(choices=[('failed', 'Task completion failed'), ('buggy', 'Task completion is buggy'), ('completed', 'Task completion is done'), ('well', 'Task completion well done'), ('super', 'Task completion superbly done')], default='done', help_text='Reviewers assessment', max_length=20, verbose_name='Rating')),
                ('notes', models.TextField(help_text='Information of the collaborators role and responsibilities', max_length=1000, verbose_name='Assignment Notes')),
                ('workload', models.DecimalField(decimal_places=2, default=0.5, max_digits=4, verbose_name='Workload assigned for rating')),
                ('reviewer', models.ForeignKey(help_text='Reviewer of the Task', on_delete=django.db.models.deletion.CASCADE, related_name='reviews_made', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(help_text='Review of Task', on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='shareholder.Task')),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('workload_share', models.PositiveSmallIntegerField(default=100, help_text='Two collaborators with 100% would get 50% each.', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Workload Share of the collaborator')),
                ('notes', models.TextField(help_text='Information of the collaborators role and responsibilities', max_length=1000, verbose_name='Assignment Notes')),
                ('collaborator', models.ForeignKey(help_text='Assignment Collaborator', on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(help_text='Assignment Task', on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='shareholder.Task')),
            ],
            options={
                'verbose_name': 'Assignment',
                'verbose_name_plural': 'Assignments',
                'ordering': ('-workload_share',),
            },
        ),
    ]
